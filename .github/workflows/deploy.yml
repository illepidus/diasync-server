name: Deploy

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Run tests
        run: ./gradlew test

      - name: Create release branch
        run: |
          DATE=$(date +%Y-%m-%d)
          COUNT=$(git branch -r | grep "release-$DATE" | wc -l | xargs)
          NEW_COUNT=$((COUNT + 1))
          BRANCH_NAME="release-$DATE-$NEW_COUNT"
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME

      - name: Build Docker image
        run: |
          docker build -t diasync-server:latest .

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASS: ${{ secrets.SSH_PASS }}
        run: |
          sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST << 'EOF'
            docker stop diasync-server || true
            docker rm diasync-server || true
            docker rmi diasync-server:latest || true
          EOF
          docker save diasync-server:latest | sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST docker load
          sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST << 'EOF'
            docker run -d --name diasync-server -p 15080:15080 diasync-server:latest
          EOF
