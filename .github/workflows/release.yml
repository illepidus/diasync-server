name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Load environment variables
        run: cat .github/.env >> $GITHUB_ENV

      - name: Create release branch
        id: create_branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DATE=$(date +%Y-%m-%d)
          COUNT=$(git branch -r | grep "release-$DATE" | wc -l | xargs)
          NEW_COUNT=$((COUNT + 1))
          BRANCH_NAME="release-$DATE-$NEW_COUNT"
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Run tests
        run: ./gradlew test

      - name: Build Docker image
        run: docker build -t diasync-server:latest -f deploy/Dockerfile .

      - name: Deploy to server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          chmod +x deploy/deploy.sh
          ./deploy/deploy.sh

      - name: Verify deployment
        run: |
          TIMEOUT=300
          INTERVAL=10
          ELAPSED=0
          while [ $ELAPSED -lt $TIMEOUT ]; do
            if curl -s "https://${DOMAIN}/ping" | grep -q "pong"; then
              echo "Deployment successful: /ping endpoint responded with 'pong'"
              exit 0
            fi
            echo "Waiting for /ping endpoint... ($ELAPSED/$TIMEOUT seconds)"
            sleep $INTERVAL
            ELAPSED=$((ELAPSED + INTERVAL))
          done
          echo "Deployment failed: /ping endpoint did not respond with 'pong' within 5 minutes"
          exit 1

      - name: Delete release branch on failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME=${{ steps.create_branch.outputs.branch_name }}
          git push origin --delete $BRANCH_NAME
          echo "Release branch $BRANCH_NAME deleted due to workflow failure"
