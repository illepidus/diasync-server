plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.gorylenko.gradle-git-properties' version "2.5.0"
}

gitProperties {
    keys = ['git.commit.id']
    failOnNoGitDirectory = false
}

group = 'ru.krotarnya'
version = 'unspecified'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation 'com.gorylenko.gradle-git-properties:com.gorylenko.gradle-git-properties.gradle.plugin:2.5.0'

    implementation 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.8.6'
    implementation 'io.projectreactor:reactor-core'
    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.mockito:mockito-core:5.16.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs "-javaagent:${classpath.find { it.name.contains('mockito-core') }}", "-Xshare:off"
}

tasks.named('processResources') {
    dependsOn 'generateGitProperties'
}
